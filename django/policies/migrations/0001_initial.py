# Generated by Django 3.2.16 on 2022-10-10 15:08

import colorfield.fields
import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models

import policies.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                ("code", models.CharField(max_length=20, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Model",
            fields=[
                ("code", models.CharField(max_length=20, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("fix_price", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="models",
                        to="policies.brand",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Policy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "imei",
                    models.CharField(
                        help_text="15 digit IMEI number that identifies the phone",
                        max_length=15,
                        validators=[policies.models.validate_imei],
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Phone number of the user, it will be used to confirm the data with the user",
                        max_length=128,
                        region=None,
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                (
                    "phone_color",
                    colorfield.fields.ColorField(
                        default="#FFFFFF",
                        help_text="Select the color of the phone cover",
                        image_field=None,
                        max_length=18,
                        samples=None,
                    ),
                ),
                ("premium", models.DecimalField(decimal_places=2, max_digits=12)),
                ("payout", models.DecimalField(decimal_places=2, max_digits=12)),
                ("expiration", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("claimed", "Claim process started"),
                            ("on_repair", "Delivered to repair center"),
                            ("claim_validated", "Claim validated"),
                            ("refunded", "Refunded"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        help_text="Tracks the status of the policy",
                        max_length=20,
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Choose a brand/model from the supported ones",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="policies",
                        to="policies.model",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PolicyActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "status_from",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("claimed", "Claim process started"),
                            ("on_repair", "Delivered to repair center"),
                            ("claim_validated", "Claim validated"),
                            ("refunded", "Refunded"),
                            ("cancelled", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status_to",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("claimed", "Claim process started"),
                            ("on_repair", "Delivered to repair center"),
                            ("claim_validated", "Claim validated"),
                            ("refunded", "Refunded"),
                            ("cancelled", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now=True)),
                ("params", models.JSONField(default=dict)),
                (
                    "policy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="policies.policy",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
    ]
